#include <iostream>
    #include <map>
    using namespace std;
    typedef long long LL;
    LL a[200001];
    map<LL,LL> m;//建立一个数字到出现次数的映射 map<num,times>
    //A-B=C --> A-C=B
    int main() {
        int n;
        LL c;
        LL ans=0;
        cin >> n >> c;
        for(int i=1;i<=n;i++) {
            cin >> a[i];
            m[a[i]]++;
            a[i]-=c;    
        } 
        for(int i=1;i<=n;i++) ans+=m[a[i]];
        cout << ans << endl;
        return 0;
}

#include<bits/stdc++.h>
using namespace std;
long long a[2000010];
int main() {
	long long n, c, cnt = 0;
	cin >> n >> c;
	for (long long i = 1; i <= n; i++)cin >> a[i];
	sort(a, a + n + 1);//升序
	for (long long i = 1; i <= n; i++) {
		long long tcnt = 0, temp = a[i] + c, l = i, r = n;
		//找到第一个目标数字
		while (l < r) {
			long long mid = l + (r - l) / 2;
			if (a[mid] >= temp)r = mid;
			else l = mid + 1;
		}
		//在后面向后找相同的数字
		while (a[l] == temp) {
			tcnt++;
			l++;
		}
		long long m = tcnt, j = i + 1;
		//在前面向后找相同的数字
		while (a[j] == a[i]) {
			tcnt += m;
			j++;
		}
		i = j - 1;
		cnt += tcnt;
	}
	cout << cnt;
	return 0;
}