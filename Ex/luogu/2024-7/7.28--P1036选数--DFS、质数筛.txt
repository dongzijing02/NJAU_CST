//只能使用普通筛，使用欧拉筛内存超了
#include<bits/stdc++.h>
using namespace std;
int num[30] = { 0 }, cnt = 0;
int n, k;//从n个数字中选择k个相加
int sushu(int num) {
	if (num == 1)return 0;
	for (int i = 2; i * i < num; i++) 
		if (num % i == 0)
			return 0;
	return 1;
}
void dfs(int pos,int total,int pos2) {
	if (pos2 == k) {
		if(sushu(total))
			cnt++;
		return;
	}
	for (int i = pos; i < n; i++)
		dfs(i + 1, total + num[i], pos2 + 1);
	
}
int main() {
	cin >> n >> k;
	for (int i = 0; i < n; i++) 
		cin >> num[i];
	dfs(0, 0, 0);
	cout << cnt;
	return 0;
}

//欧拉线性筛
#include<stdio.h>
int a[100000000];
int primes[100000000];
int pp = 0;
int main(){
	int n;
	scanf_s("%d", &n);
	for (int i = 1; i <= n; i++) {
		a[i] = 1;
	}
	for (int i = 2; i < n; i++) {
		if (a[i]) primes[++pp] = i;							//将素数存入数组					
		for (int j = 1; primes[j] * i <= n; ++j) {
			a[primes[j] * i] = 0;
			if (i % primes[j] == 0) break;					//如果i是素数的倍数，停止，防止一个数字被筛多次
		}
	}
	for (int i = 1; i < n; i++) {
		if (a[i])
			printf("%d\t", i);
	}
	return 0;
}