//map
#include<bits/stdc++.h>
using namespace std;
int n, cnt = 0;
string s;
map<string, bool>mymap;
int main() {
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> s;
		if (mymap[s] == false) {
			mymap[s] = true;
			cnt++;
		}
	}
	cout << cnt;
	return 0;
}

//hash--其实就是找到一种特殊的加密方式
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cstdio>
using namespace std;
typedef unsigned long long ull;
ull base = 131;
ull a[10010];
char s[10010];
int n, ans = 1;
int prime = 233317;
ull mod = 212370440130137957ll;
ull hashe(char s[]) {
    int len = strlen(s);
    ull ans = 0;
    for (int i = 0; i < len; i++)
        ans = (ans * base + (ull)s[i]) % mod + prime;
    return ans;
}
int main(){
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)    {
        scanf("%s", s);
        a[i] = hashe(s);
    }
    sort(a + 1, a + n + 1);
    for (int i = 1; i < n; i++)    
        if (a[i] != a[i + 1])
            ans++;
    printf("%d", ans);
    return 0;
}

//trie树mle
#include<bits/stdc++.h>
using namespace std;
int n, cnt = 0, total = 0;
int nex[1500000][70], exist[1500000];
string s;
int getnum(char c) {
	if (c >= '0' && c <= '9') return c - '0';
	else if (c >= 'A' && c <= 'Z') return c - 'A' + 10;
	else if (c >= 'a' && c <= 'z') return c - 'a' + 26;
}
void insert() {
	int p = 0;
	for (int i = 0; i < s.size(); i++) {
		int c = getnum(s[i]);
		if (!nex[p][c])
			nex[p][c] = ++cnt;
		p = nex[p][c];
	}
	if (exist[p] == 0) {
		exist[p] = 1;
		total++;
	}
}
int main() {
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> s;
		insert();
	}
	cout << total;
	return 0;
}