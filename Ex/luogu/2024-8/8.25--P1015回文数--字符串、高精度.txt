#include<bits/stdc++.h>
using namespace std;
int base, step = 0, ssize;
int a[500], b[500], c[500];
//c++中  strrev(s)  	reverse(s.begin(), s.end())均是对自身的反转，返回值为void
string s, sr;
bool judge() {
	for (int i = 0; i < ssize; i++) {
		if (a[i] != a[ssize - i - 1])
			return false;
	}
	return true;
}
void change() {
	for (int i = 0; i < ssize; i++) 
		if (s[i] >= '0' && s[i] <= '9') a[i] = s[ssize - i - 1] - '0';
		else a[i] = s[ssize - i - 1] - 'A' + 10;
}
void reverse_int() {
	for (int i = 0; i < ssize; i++) 
		b[ssize - i - 1] = a[i];
}
void copy() {
	for (int i = 0; i < ssize; i++) 
		a[i] = c[i];
}
void add() {
	step++;
	int i;
	//<=包含了最后的一位进位，同时i超出数组有效索引值
	for (i = 0; i <= ssize; i++) {
		c[i] = a[i] + b[i];
		if (c[i] >= base) {
			c[i] %= base;
			a[i + 1]++;
		}
	}
	if (c[i - 1] > 0) 
		ssize++;
}
int main() {
	cin >> base >> s;
	ssize = s.size();
	change();
	while (!judge()) {
		reverse_int();
		add();
		copy();
	}
	if (step <= 30)
		cout << "STEP=" << step;
	else cout << "Impossible!";
	return 0;
}